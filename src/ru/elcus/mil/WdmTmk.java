package ru.elcus.mil;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLong;
import com.sun.jna.Platform;
import com.sun.jna.Pointer;

import ru.elcus.mil.structs.TTmkConfigData;
import ru.elcus.mil.structs.TTmkEventData;
public class WdmTmk {
	static CWdmtmkInterface INSTANCE = (CWdmtmkInterface) Native.load((Platform.isWindows() ? "Wdmtmk" : "Wdmtmk"), CWdmtmkInterface.class);
	public static short POLLIN = 0x0001;

	interface CWdmtmkInterface extends Library {
		 int TmkOpen();
		 void TmkClose();
		 int tmkgetmaxn();
		 int tmkconfig( int tmkNumber );
		 int tmkdone( int tmkNumber );
		 int tmkselect( int tmkNumber );
		 int tmkselected();
		 short tmkgetmode();
		 void tmksetcwbits( short tmkSetControl );
		 void tmkclrcwbits( short tmkClrControl );
		 short tmkgetcwbits();
		 //void tmkdefevent( HANDLE hEvent, int fEventSet );
		 void tmkdefevent( Pointer hEvent, int fEventSet );
		 void tmkgetevd( TTmkEventData pEvD );
		 void tmkgetinfo(TTmkConfigData pConfD);
		 int bcreset();
		 void bc_def_tldw( short wTLDW );
		 void bc_enable_di();
		 void bc_disable_di();
		 int bcdefirqmode( short bcIrqMode );
		 short bcgetirqmode();
		 short bcgetmaxbase();
		 int bcdefbase( short bcBasePC );
		 short bcgetbase();
		 void bcputw( short bcAddr, short bcData );
		 short bcgetw( short bcAddr );
		 int bcgetansw( short bcCtrlCode );
		 void bcputblk( short bcAddr, Pointer pcBuffer, short cwLength );
		 void bcgetblk( short bcAddr, Pointer pcBuffer, short cwLength );
		 int bcdefbus( short bcBus );
		 short bcgetbus();
		 int bcstart( short bcBase, short bcCtrlCode );
		 int bcstartx( short bcBase, short bcCtrlCode );
		 int bcdeflink( short bcBase, short bcCtrlCode );
		 int bcgetlink();
		 short bcstop();
		 int bcgetstate();
		 int rtreset();
		 int rtdefirqmode( short rtIrqMode );
		 short rtgetirqmode();
		 int rtdefmode( short rtMode );
		 short rtgetmode();
		 short rtgetmaxpage();
		 int rtdefpage( short rtPage );
		 short rtgetpage();
		 int rtdefpagepc( short rtPagePC );
		 int rtdefpagebus( short rtPageBus );
		 short rtgetpagepc();
		 short rtgetpagebus();
		 int rtdefaddress( short rtAddress );
		 short rtgetaddress();
		 void rtdefsubaddr( short rtDir, short rtSubAddr);
		 short rtgetsubaddr();
		 void rtputw( short rtAddr, short rtData );
		 short rtgetw( short rtAddr );
		 void rtputblk( short rtAddr, Pointer pcBuffer, short cwLength );
		 void rtgetblk( short rtAddr, Pointer pcBuffer, short cwLength );
		 void rtsetanswbits( short rtSetControl );
		 void rtclranswbits( short rtClrControl );
		 short rtgetanswbits();
		 void rtgetflags( Pointer pcBuffer, short rtDir, short rtFlagMin, short rtFlagMax );
		 void rtputflags( Pointer pcBuffer, short rtDir, short rtFlagMin, short rtFlagMax );
		 void rtsetflag();
		 void rtclrflag();
		 short rtgetflag( short rtDir, short rtSubAddr );
		 short rtgetstate();
		 short rtbusy();
		 void rtlock( short rtDir, short rtSubAddr );
		 void rtunlock();
		 short rtgetcmddata( short rtBusCommand );
		 void rtputcmddata( short rtBusCommand, short rtData );
		 int mtreset();
		 short mtgetsw();

	}
}
