<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="java-elcus-mil" default="main" basedir="."> 
	<description>
		Create org.json Project (JAR) with Ant build script
	</description>

	<property name="projectName" value="java-elcus-mil" />
	<property name="src.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="dist.dir" location="dist" />
	<property name="lib.dir" value="libs" />
	<target name="init">
		<mkdir dir="${build.dir}" />
	</target>

	<!-- external libraries classpath, we don't need sources and javadoc -->
	<path id="classpath">
		<fileset dir="${basedir}/">
            <include name="${lib.dir}/*.jar" />
			<include name="*.jar" />
			<exclude name="${lib.dir}/*sources.jar"/>
			<exclude name="${lib.dir}/*javadoc.jar"/>
		</fileset>
	</path>

	<!-- To work with external libraries, need classpath to compile -->
	<target name="compile" depends="init" description="compile the source ">
	<echo message="classpath.name : ${classpath.name} " />
		<javac encoding="UTF-8" includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" classpathref="classpath" />
	</target>

	<!-- constructs the external libraries classpath name -->
	<pathconvert property="classpath.name" pathsep=" ">
		<path refid="classpath" />
		<mapper>
			<chainedmapper>
				<flattenmapper />
				<!--globmapper from="*.jar" to="lib/*.jar" /-->
			</chainedmapper>
		</mapper>
	</pathconvert>



	<!-- jar it, and declares the ext libraries in manifest.mf file -->
	<target name="jar" depends="compile" description="package, output to JAR">

		<echo message="classpath.name : ${classpath.name} " />
        
		<jar jarfile="${dist.dir}/${projectName}.jar" basedir="${build.dir}">
          <fileset dir="${src.dir}" includes="res/"/>
			<manifest>
				<attribute name="Class-Path" value="${classpath.name}" />
			</manifest>
		</jar>
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- Default, run this -->
	<target name="main" depends="clean, init,compile, jar" />

</project>